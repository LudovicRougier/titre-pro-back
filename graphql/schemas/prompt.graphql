type Prompt {
    id: ID
    user_input: String!
    custom_answer: String!
    is_positive: Boolean
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    main_emotion_translation: String
    sub_emotion_translation: String

    mainEmotion: Emotion
    subEmotion: Emotion
    user: User
    movies_related_to_emotions: [Media]!
    movies_related_to_topic: [Media]!
}

extend type Query {
    prompt(id: ID! @eq): Prompt @find
}

type Mutation {
  createPrompt(input: UserInput!): Prompt
  createPromptTest(input: UserInput!): Prompt
}

input UserInput {
  user_input: String!
  is_personnalized: Boolean
  is_opposite: Boolean
}
